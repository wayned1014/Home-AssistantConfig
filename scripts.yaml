sonos_say:
  alias: Sonos Say
  sequence:
  - service: sonos.snapshot
    data_template:
      entity_id: '{{ sonos_primary|default(''media_player.sonos_arc_2'') }}'
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ sonos_primary|default(''media_player.sonos_arc_2'') }}'
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ sonos_primary|default(''media_player.sonos_arc_2'') }}'
      volume_level: '{{ volume|default(''0.3'') }}'
  - service: tts.cloud_say
    data_template:
      entity_id: '{{ sonos_primary|default(''media_player.sonos_arc_2'') }}'
      message: '{{ message }}'
  - delay: '{{ delay|default(''00:00:00'') }}'
  - wait_template: '{{ is_state(sonos_primary|default(''media_player.sonos_arc_2''),
      ''playing'') }}'
    timeout: 00:00:05
  - service: sonos.restore
    data_template:
      entity_id: '{{ sonos_primary|default(''media_player.sonos_arc_2'') }}'
  mode: single
test_tts_2:
  alias: Test TTS - Sonos
  sequence:
  - service: script.sonos_say
    data:
      message: this is a test
      delay: 00:00:03
  mode: single
google_home_say:
  alias: Google Home Say
  sequence:
  - service: tts.cloud_say
    data_template:
      entity_id: '{{ google_primary|default(''media_player.home_group'') }}'
      message: '{{ message }}'
  mode: single
test_google_home_say:
  alias: Test google home say
  sequence:
  - service: tts.cloud_say
    data:
      entity_id: media_player.gc_living_room_speaker
      message: This is a test
  mode: single
node_red_test:
  alias: Node-Red Test
  sequence:
  mode: single
google_home_goodnight_2:
  alias: Google Home-Goodnight
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.google_home_good_night
  mode: single
google_home_good_morning:
  alias: Google Home-Good Morning
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.google_home_good_morning
  mode: single
house_shutdown:
  sequence:
  - service: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.house_shutdown
  mode: single
  alias: House-Shutdown
sonos_play_playlist:
  sequence:
  - service: input_text.set_value
    target:
      entity_id: input_text.sonos_playlist
    data:
      value: '{{ playlist }}'
  - service: input_text.set_value
    target:
      entity_id: input_text.sonos_trigger_text
    data:
      value: playlist
  mode: single
  alias: Sonos-Play_Playlist
sonos_play_tv:
  alias: Sonos-Play_TV
  sequence:
  - service: input_text.set_value
    target:
      entity_id: input_text.sonos_trigger_text
    data:
      value: TV
  mode: single
a_test_toggle:
  alias: A-Test Toggle
  sequence:
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.sonos_shuffle
  - service: media_player.shuffle_set
    target:
      entity_id: media_player.sonos_arc_2
    data:
      shuffle: '{{ states.input_boolean.sonos_shuffle.state }}'
  mode: single
sonos_shuffle:
  alias: Sonos-Shuffle
  sequence:
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.sonos_shuffle
  - service: media_player.shuffle_set
    target:
      entity_id: media_player.sonos_arc_2
    data:
      shuffle: '{{ states.input_boolean.sonos_shuffle.state }}'
  mode: single
sonos_play_siriusxm:
  alias: Sonos-Play_SiriusXM
  sequence:
  - service: input_text.set_value
    target:
      entity_id: input_text.sonos_playlist
    data:
      value: '{{ playlist }}'
  - service: input_text.set_value
    target:
      entity_id: input_text.sonos_trigger_text
    data:
      value: siriusxm
  mode: single
